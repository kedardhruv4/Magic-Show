{"version":3,"sources":["assets/images/slider/01.jpg","assets/images/slider/02.jpg","assets/images/slider/03.jpg","assets/images/slider/05.jpg","assets/images/slider/06.jpg","constants/constants.js","assets/images/logo/logo.png","redux/layout.js","@core/components/spinner/Fallback-spinner.js","assets/images/slider/04.jpg","configs/themeConfig.js","redux/navbar.js","redux/reducer/authReducer.js","redux/reducer/rootReducer.js","redux/store.js","utility/context/ThemeColors.js","@core/components/ripple-button/index.js","serviceWorker.js","index.js"],"names":["USER_DATA","img4","BEARER_TOKEN","PERSIST_KEY","contentOptions","value","label","layoutSlice","createSlice","name","initialState","skin","item","window","localStorage","getItem","JSON","parse","themeConfig","layout","initialSkin","isRTL","initialDirection","type","lastLayout","menuCollapsed","menu","isCollapsed","initialMenuCollapsed","footerType","footer","navbarType","navbar","menuHidden","isHidden","contentWidth","routerTransition","navbarColor","backgroundColor","reducers","handleRTL","state","action","payload","setItem","stringify","handleSkin","handleLayout","handleFooterType","handleNavbarType","handleMenuHidden","handleLastLayout","handleNavbarColor","handleContentWidth","handleMenuCollapsed","handleRouterTransition","_layoutSlice$actions","actions","SpinnerComponent","_jsxs","className","children","_jsx","src","logo","alt","app","appName","appLogoImage","require","default","customizer","scrollTop","toastPosition","getBookmarks","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","suggestions","bookmarks","stop","updateBookmarked","_ref2","_callee2","id","_context2","post","_x","apply","arguments","query","handleSearchQuery","extraReducers","builder","addCase","fulfilled","objectToUpdate","find","isBookmarked","bookmarkIndex","findIndex","x","push","splice","user","authReducer","length","undefined","_objectSpread","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","store","configureStore","reducer","devTools","trace","traceLimit","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ThemeColors","createContext","ThemeContext","_ref","_useState","useState","_useState2","_slicedToArray","colors","setColors","useEffect","getHex","color","getComputedStyle","document","body","getPropertyValue","trim","obj","primary","light","concat","main","secondary","success","danger","warning","info","dark","Provider","Button","Ripple","onClick","rest","_objectWithoutProperties","_excluded","mounted","setMounted","_useState3","_useState4","isRippling","setIsRippling","_useState5","y","_useState6","coords","setCoords","setTimeout","classnames","_defineProperty","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","style","Boolean","location","hostname","match","LazyApp","lazy","ReactDOM","render","BrowserRouter","PersistGate","loading","Suspense","fallback","Spinner","Toaster","position","toastOptions","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b03a5030.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/01.ae763d9d.jpg\";","export default __webpack_public_path__ + \"static/media/02.7b36c041.jpg\";","export default __webpack_public_path__ + \"static/media/03.1c67b250.jpg\";","export default __webpack_public_path__ + \"static/media/05.3d963e35.jpg\";","export default __webpack_public_path__ + \"static/media/06.1c554057.jpg\";","import img1 from '@src/assets/images/slider/01.jpg'\nimport img2 from '@src/assets/images/slider/02.jpg'\nimport img3 from '@src/assets/images/slider/03.jpg'\nimport img4 from '@src/assets/images/slider/04.jpg'\nimport img5 from '@src/assets/images/slider/05.jpg'\nimport img6 from '@src/assets/images/slider/06.jpg'\n\nexport const dummyArray = [\n  {\n    title: 'title 1',\n    descrtiption: 'desctiption 1',\n    image: img1\n  },\n  {\n    title: 'title 2',\n    descrtiption: 'desctiption 2',\n    image: img2\n  },\n  {\n    title: 'title 3',\n    descrtiption: 'desctiption 3',\n    image: img3\n  },\n  {\n    title: 'title 4',\n    descrtiption: 'desctiption 4',\n    image: img4\n  },\n  {\n    title: 'title 5',\n    descrtiption: 'desctiption 5',\n    image: img5\n  },\n  {\n    title: 'title 6',\n    descrtiption: 'desctiption 6',\n    image: img6\n  }\n]\nexport const USER_DATA = 'USER_DATA'\nexport const BEARER_TOKEN = 'BEARER_TOKEN'\nexport const PERSIST_KEY = 'ott-root'\n\nexport const contentOptions = [\n  { value: true, label: 'Free' },\n  { value: false, label: 'Prime' }\n]\n","export default __webpack_public_path__ + \"static/media/logo.0ab6ae71.png\";","// ** Redux Imports\nimport { createSlice } from '@reduxjs/toolkit'\n\n// ** ThemeConfig Import\nimport themeConfig from '@configs/themeConfig'\n\nconst initialMenuCollapsed = () => {\n  const item = window.localStorage.getItem('menuCollapsed')\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed\n}\n\nconst initialDirection = () => {\n  const item = window.localStorage.getItem('direction')\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.isRTL\n}\n\nconst initialSkin = () => {\n  const item = window.localStorage.getItem('skin')\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : themeConfig.layout.skin\n}\n\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    skin: initialSkin(),\n    isRTL: initialDirection(),\n    layout: themeConfig.layout.type,\n    lastLayout: themeConfig.layout.type,\n    menuCollapsed: initialMenuCollapsed(),\n    footerType: themeConfig.layout.footer.type,\n    navbarType: themeConfig.layout.navbar.type,\n    menuHidden: themeConfig.layout.menu.isHidden,\n    contentWidth: themeConfig.layout.contentWidth,\n    routerTransition: themeConfig.layout.routerTransition,\n    navbarColor: themeConfig.layout.navbar.backgroundColor\n  },\n  reducers: {\n    handleRTL: (state, action) => {\n      state.isRTL = action.payload\n      window.localStorage.setItem('direction', JSON.stringify(action.payload))\n    },\n    handleSkin: (state, action) => {\n      state.skin = action.payload\n      window.localStorage.setItem('skin', JSON.stringify(action.payload))\n    },\n    handleLayout: (state, action) => {\n      state.layout = action.payload\n    },\n    handleFooterType: (state, action) => {\n      state.footerType = action.payload\n    },\n    handleNavbarType: (state, action) => {\n      state.navbarType = action.payload\n    },\n    handleMenuHidden: (state, action) => {\n      state.menuHidden = action.payload\n    },\n    handleLastLayout: (state, action) => {\n      state.lastLayout = action.payload\n    },\n    handleNavbarColor: (state, action) => {\n      state.navbarColor = action.payload\n    },\n    handleContentWidth: (state, action) => {\n      state.contentWidth = action.payload\n    },\n    handleMenuCollapsed: (state, action) => {\n      state.menuCollapsed = action.payload\n      window.localStorage.setItem('menuCollapsed', JSON.stringify(action.payload))\n    },\n    handleRouterTransition: (state, action) => {\n      state.routerTransition = action.payload\n    }\n  }\n})\n\nexport const {\n  handleRTL,\n  handleSkin,\n  handleLayout,\n  handleLastLayout,\n  handleMenuHidden,\n  handleNavbarType,\n  handleFooterType,\n  handleNavbarColor,\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleRouterTransition\n} = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","// ** Logo\nimport logo from '@src/assets/images/logo/logo.png'\n\nconst SpinnerComponent = () => {\n  return (\n    <div className='fallback-spinner app-loader'>\n      <img className='loder-image' src={logo} alt='logo' />\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default SpinnerComponent\n","export default __webpack_public_path__ + \"static/media/04.aa9354e9.jpg\";","// You can customize the template with the help of this file\n\n//Template config options\nconst themeConfig = {\n  app: {\n    appName: 'MagicShow',\n    appLogoImage: require('@src/assets/images/logo/logo.png').default\n  },\n  layout: {\n    isRTL: false,\n    skin: 'dark', // light, dark, bordered, semi-dark\n    routerTransition: 'fadeIn', // fadeIn, fadeInLeft, zoomIn, none or check this for more transition https://animate.style/\n    type: 'horizontal', // vertical, horizontal\n    contentWidth: 'boxed', // full, boxed\n    menu: {\n      isHidden: false,\n      isCollapsed: true\n    },\n    navbar: {\n      // ? For horizontal menu, navbar type will work for navMenu type\n      type: 'static', // static , sticky , floating, hidden\n      backgroundColor: 'white' // BS color options [primary, success, etc]\n    },\n    footer: {\n      type: 'hidden' // static, sticky, hidden\n    },\n    customizer: false,\n    scrollTop: true, // Enable scroll to top button,\n    toastPosition: 'top-right' // top-left, top-center, top-right, bottom-left, bottom-center, bottom-right\n  }\n}\n\nexport default themeConfig\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getBookmarks = createAsyncThunk('layout/getBookmarks', async () => {\n  const response = await axios.get('/api/bookmarks/data')\n  return {\n    data: response.data.suggestions,\n    bookmarks: response.data.bookmarks\n  }\n})\n\nexport const updateBookmarked = createAsyncThunk('layout/updateBookmarked', async id => {\n  await axios.post('/api/bookmarks/update', { id })\n  return id\n})\n\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    query: '',\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getBookmarks.fulfilled, (state, action) => {\n        state.suggestions = action.payload.data\n        state.bookmarks = action.payload.bookmarks\n      })\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\n        let objectToUpdate\n\n        // ** find & update object\n        state.suggestions.find(item => {\n          if (item.id === action.payload) {\n            item.isBookmarked = !item.isBookmarked\n            objectToUpdate = item\n          }\n        })\n\n        // ** Get index to add or remove bookmark from array\n        const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload)\n\n        if (bookmarkIndex === -1) {\n          state.bookmarks.push(objectToUpdate)\n        } else {\n          state.bookmarks.splice(bookmarkIndex, 1)\n        }\n      })\n  }\n})\n\nexport const { handleSearchQuery } = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","import { USER_DATA } from '../../constants/constants'\n\n// import from files\nconst initialState = {\n  user: []\n}\n\n// reducer for user data\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_DATA:\n      return { ...state, user: action.payload }\n    default: {\n      return state\n    }\n  }\n}\nexport default authReducer\n","// ** Reducers Imports\nimport layout from '../layout'\nimport navbar from '../navbar'\nimport authReducer from '../reducer/authReducer'\nimport storage from 'redux-persist/lib/storage'\nimport { Reducer, combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport { PERSIST_KEY } from '../../constants/constants'\n\nconst persistConfig = {\n  key: PERSIST_KEY,\n  storage,\n  whitelist: ['navbar', 'layout', 'authReducer']\n}\n\nconst rootReducer = combineReducers({\n  navbar,\n  layout,\n  authReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer)\n","// ** Redux Imports\nimport rootReducer from './reducer/rootReducer'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { persistStore } from 'redux-persist'\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: { trace: true, traceLimit: 25 },\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    })\n  }\n})\nexport const persistor = persistStore(store)\n","// ** React Imports\nimport { useEffect, useState, createContext } from 'react'\n\n// ** Create Context\nconst ThemeColors = createContext()\n\nconst ThemeContext = ({ children }) => {\n  // ** State\n  const [colors, setColors] = useState({})\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (window !== 'undefined') {\n      //** Get variable value\n      const getHex = color => window.getComputedStyle(document.body).getPropertyValue(color).trim()\n\n      //** Colors obj\n      const obj = {\n        primary: {\n          light: getHex('--bs-primary').concat('1a'),\n          main: getHex('--bs-primary')\n        },\n        secondary: {\n          light: getHex('--bs-secondary').concat('1a'),\n          main: getHex('--bs-secondary')\n        },\n        success: {\n          light: getHex('--bs-success').concat('1a'),\n          main: getHex('--bs-success')\n        },\n        danger: {\n          light: getHex('--bs-danger').concat('1a'),\n          main: getHex('--bs-danger')\n        },\n        warning: {\n          light: getHex('--bs-warning').concat('1a'),\n          main: getHex('--bs-warning')\n        },\n        info: {\n          light: getHex('--bs-info').concat('1a'),\n          main: getHex('--bs-info')\n        },\n        dark: {\n          light: getHex('--bs-dark').concat('1a'),\n          main: getHex('--bs-dark')\n        }\n      }\n\n      setColors({ ...obj })\n    }\n  }, [])\n\n  return <ThemeColors.Provider value={{ colors }}>{children}</ThemeColors.Provider>\n}\n\nexport { ThemeColors, ThemeContext }\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Button } from 'reactstrap'\n\n// ** Styles\nimport './ripple-button.scss'\n\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\n  // ** States\n  const [mounted, setMounted] = useState(false)\n  const [isRippling, setIsRippling] = useState(false)\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\n\n  // ** Toggle mounted on mount & unmount\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  // ** Check for coords and set ripple\n  useEffect(() => {\n    if (mounted) {\n      if (coords.x !== -1 && coords.y !== -1) {\n        setIsRippling(true)\n        setTimeout(() => setIsRippling(false), 500)\n      } else {\n        setIsRippling(false)\n      }\n    }\n  }, [coords])\n\n  // ** Reset Coords on ripple end\n  useEffect(() => {\n    if (mounted) {\n      if (!isRippling) setCoords({ x: -1, y: -1 })\n    }\n  }, [isRippling])\n\n  return (\n    <Button\n      className={classnames('waves-effect', {\n        [className]: className\n      })}\n      onClick={e => {\n        const rect = e.target.getBoundingClientRect()\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\n        if (onClick) {\n          onClick(e)\n        }\n      }}\n      {...rest}\n    >\n      {children}\n      {isRippling ? (\n        <span\n          className='waves-ripple'\n          style={{\n            left: coords.x,\n            top: coords.y\n          }}\n        ></span>\n      ) : null}\n    </Button>\n  )\n}\n\n// ** PropTypes\nRippleButton.propTypes = {\n  ...Button.propTypes\n}\n\nButton.Ripple = RippleButton\n","/*eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// ** React Imports\nimport ReactDOM from 'react-dom'\nimport { Suspense, lazy } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\n// ** Redux Imports\nimport { store, persistor } from './redux/store'\nimport { Provider } from 'react-redux'\n\n// ** ThemeColors Context\n\nimport { ThemeContext } from './utility/context/ThemeColors'\n\n// ** ThemeConfig\nimport themeConfig from './configs/themeConfig'\n\n// ** Toast\nimport { Toaster } from 'react-hot-toast'\n\n// ** Spinner (Splash Screen)\nimport Spinner from './@core/components/spinner/Fallback-spinner'\n\n// ** Ripple Button\nimport './@core/components/ripple-button'\n\n// ** PrismJS\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport 'prismjs/components/prism-jsx.min'\n\n// ** React Perfect Scrollbar\nimport 'react-perfect-scrollbar/dist/css/styles.css'\n\n// ** React Hot Toast Styles\nimport '@styles/react/libs/react-hot-toasts/react-hot-toasts.scss'\n\n// ** Core styles\nimport './@core/assets/fonts/feather/iconfont.css'\nimport './@core/scss/core.scss'\nimport './assets/scss/style.scss'\n\n// ** Service Worker\nimport * as serviceWorker from './serviceWorker'\nimport { PersistGate } from 'redux-persist/integration/react'\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import('./App'))\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Suspense fallback={<Spinner />}>\n        <ThemeContext>\n          <LazyApp />\n          <Toaster position={themeConfig.layout.toastPosition} toastOptions={{ className: 'react-hot-toast' }} />\n        </ThemeContext>\n      </Suspense>\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}